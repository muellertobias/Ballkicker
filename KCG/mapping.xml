<?xml version="1.0" encoding="ISO-8859-1"?>
<!--$********** SCADE Suite KCG 32-bit 6.6 (build i15) ***********
** Command: kcg66.exe -config D:/Development/Scadet/RobotTar/KCG/config.txt
** Generation date: 2017-09-21T12:18:29
*************************************************************$-->
<mapping>
  <config>
    <option name="use_types" value="#off#"/>
    <option name="imported_root_package" value="#off#"/>
    <option name="root_package" value="#off#"/>
    <option name="xml_basename" value="kcg_xml_filter_out.scade"/>
    <option name="state_vector" value="#off#"/>
    <option name="static" value="#off#"/>
    <option name="separate_io_all" value="#off#"/>
    <option name="no_separate_io" value="#off#"/>
    <option name="separate_io" value="#off#"/>
    <option name="warn_error" value="#off#"/>
    <option name="short_circuit" value="#off#"/>
    <option name="wrap_c_ops" value="#off#"/>
    <option name="input_file"
        value="D:/Program Files (x86)/Esterel Technologies/SCADE R17/SCADE/libraries/SC65/libverif/libverif.xscade"/>
    <option name="input_file"
        value="D:/Program Files (x86)/Esterel Technologies/SCADE R17/SCADE/libraries/SC65/libpwlinear/lut.xscade"/>
    <option name="input_file"
        value="D:/Program Files (x86)/Esterel Technologies/SCADE R17/SCADE/libraries/SC65/libpwlinear/pwlinear.xscade"/>
    <option name="input_file"
        value="D:/Program Files (x86)/Esterel Technologies/SCADE R17/SCADE/libraries/SC65/libmathext/mathext.xscade"/>
    <option name="input_file"
        value="D:/Program Files (x86)/Esterel Technologies/SCADE R17/SCADE/libraries/SC65/libmath/math.xscade"/>
    <option name="input_file"
        value="D:/Program Files (x86)/Esterel Technologies/SCADE R17/SCADE/libraries/SC65/libmath/vect.xscade"/>
    <option name="input_file"
        value="D:/Program Files (x86)/Esterel Technologies/SCADE R17/SCADE/libraries/SC65/liblinear/filters.xscade"/>
    <option name="input_file"
        value="D:/Program Files (x86)/Esterel Technologies/SCADE R17/SCADE/libraries/SC65/liblinear/linear.xscade"/>
    <option name="input_file"
        value="D:/Program Files (x86)/Esterel Technologies/SCADE R17/SCADE/libraries/SC65/libdigital/TruthTables.xscade"/>
    <option name="input_file"
        value="D:/Program Files (x86)/Esterel Technologies/SCADE R17/SCADE/libraries/SC65/libdigital/digital.xscade"/>
    <option name="input_file" value="D:/Development/Scadet/RobotTar/Operator1.xscade"/>
    <option name="probes" value="#off#"/>
    <option name="debug" value="#off#"/>
    <option name="no_observe" value="#off#"/>
    <option name="observe" value="#off#"/>
    <option name="user_config" value="./user_macros.h"/>
    <option name="input_threshold" value="#off#"/>
    <option name="header" value="#off#"/>
    <option name="significance_length" value="31"/>
    <option name="name_length" value="200"/>
    <option name="globals_prefix" value="#off#"/>
    <option name="keep_asserts" value="#off#"/>
    <option name="global_root_context" value="#off#"/>
    <option name="expall" value="#off#"/>
    <option name="noexp" value="#off#"/>
    <option name="exp" value="#off#"/>
    <option name="target_dir" value="D:/Development/Scadet/RobotTar/KCG"/>
    <option name="target" value="C"/>
    <option name="root" value="StateMachine"/>
    <option name="auth" value="#off#"/>
  </config>
  <model>
    <predefType id="1" name="bool"/>
    <predefType id="2" name="char"/>
    <predefType id="3" name="int8"/>
    <predefType id="4" name="int16"/>
    <predefType id="5" name="int32"/>
    <predefType id="6" name="int64"/>
    <predefType id="7" name="uint8"/>
    <predefType id="8" name="uint16"/>
    <predefType id="9" name="uint32"/>
    <predefType id="10" name="uint64"/>
    <predefType id="11" name="float32"/>
    <predefType id="12" name="float64"/>
    <predefType id="13" name="size"/>
    <operator id="14" name="StateMachine" imported="false" root="true" expanded="false">
      <input id="15" name="AverageSonar" clock="false" type="4"/>
      <input id="16" name="Start" clock="false" type="1"/>
      <input id="17" name="ColorSensor" clock="false" type="4"/>
      <output id="18" name="CountValue" clock="false" type="9"/>
      <output id="19" name="SpeedValue" clock="false" type="4"/>
      <output id="20" name="Output3" clock="false" type="1"/>
      <signal id="21" name="OnBallSignal"/>
      <signal id="22" name="OffBallSignal"/>
      <signal id="23" name="StartSignal"/>
      <signal id="24" name="StopSignal"/>
      <instance id="25" name="1" op="77" expanded="true">
        <input id="26" name="IROI_Input" clock="false" type="4"/>
        <input id="27" name="A" clock="false" type="4"/>
        <input id="28" name="B" clock="false" type="4"/>
        <output id="29" name="IROI_Output" clock="false" type="1"/>
        <assume id="30" name="A1"/>
      </instance>
      <instance id="31" name="1" op="79" expanded="true">
        <input id="32" name="IRIO_Input" clock="false" type="4"/>
        <input id="33" name="A" clock="false" type="4"/>
        <input id="34" name="B" clock="false" type="4"/>
        <output id="35" name="IRIO_Output" clock="false" type="1"/>
        <assume id="36" name="A1"/>
      </instance>
      <automaton id="37" name="SM3">
        <state id="38" name="DriveAndCount" initial="false" final="false" default="false">
          <automaton id="39" name="CountSM">
            <state id="40" name="Wait" initial="true" final="false" default="false">
              <fork id="41" name="1" kind="strong">
                <transition id="42" dest="43"/>
              </fork>
            </state>
            <state id="43" name="Count" initial="false" final="false" default="false">
              <fork id="44" name="1" kind="strong">
                <transition id="45" dest="40"/>
                <last id="46"/>
              </fork>
            </state>
          </automaton>
          <automaton id="47" name="Drive">
            <state id="48" name="Drive" initial="false" final="false" default="false">
              <fork id="49" name="1" kind="strong">
                <transition id="50" dest="51"/>
              </fork>
            </state>
            <state id="51" name="Init" initial="true" final="false" default="false">
              <fork id="52" name="1" kind="strong">
                <transition id="53" dest="48"/>
              </fork>
            </state>
          </automaton>
          <fork id="54" name="1" kind="weak">
            <transition id="55" dest="56"/>
          </fork>
        </state>
        <state id="56" name="Stop" initial="true" final="false" default="false">
          <fork id="57" name="1" kind="strong">
            <transition id="58" dest="38"/>
          </fork>
        </state>
      </automaton>
      <instance id="59" name="2" op="79" expanded="true">
        <input id="60" name="IRIO_Input" clock="false" type="4"/>
        <input id="61" name="A" clock="false" type="4"/>
        <input id="62" name="B" clock="false" type="4"/>
        <output id="63" name="IRIO_Output" clock="false" type="1"/>
        <assume id="64" name="A1"/>
      </instance>
    </operator>
    <package id="65" name="digital"/>
    <package id="66" name="truthtables">
      <enum id="67" name="TruthTableValues">
        <value id="68" name="T" default="false"/>
        <value id="69" name="F" default="false"/>
        <value id="70" name="X" default="false"/>
      </enum>
    </package>
    <package id="71" name="linear"/>
    <package id="72" name="filters"/>
    <package id="73" name="vect"/>
    <package id="74" name="math">
      <operator id="75" name="InRangeInOut" imported="false" root="false" expanded="true"/>
      <operator id="76" name="InRangeOutIn" imported="false" root="false" expanded="true"/>
      <mono id="77" src="76">
        <typeVar id="78" name="T" type="4"/>
      </mono>
      <mono id="79" src="75">
        <typeVar id="80" name="T" type="4"/>
      </mono>
    </package>
    <package id="81" name="mathext">
      <package id="82" name="mathextimpl"/>
    </package>
    <package id="83" name="pwlinear"/>
    <package id="84" name="lut"/>
    <package id="85" name="verif"/>
  </model>
  <generated>
    <c>
      <file id="86" name="StateMachine.h">
        <function id="87" name="StateMachine_init">
          <parameter id="88" name="outC" type="94" pointer="true"/>
        </function>
        <function id="89" name="StateMachine_reset">
          <parameter id="90" name="outC" type="94" pointer="true"/>
        </function>
        <function id="91" name="StateMachine">
          <parameter id="92" name="inC" type="105" pointer="true"/>
          <parameter id="93" name="outC" type="94" pointer="true"/>
        </function>
        <struct id="94" name="outC_StateMachine">
          <field id="95" name="CountValue" type="164" pointer="false"/>
          <field id="96" name="SpeedValue" type="159" pointer="false"/>
          <field id="97" name="Output3" type="169" pointer="false"/>
          <field id="98" name="Local1" type="169" pointer="false"/>
          <field id="99" name="Speed" type="159" pointer="false"/>
          <field id="100" name="Counting" type="164" pointer="false"/>
          <field id="101" name="SM3_state_nxt" type="124" pointer="false"/>
          <field id="102" name="CountSM_state_nxt_DriveAndCount_SM3" type="110" pointer="false"/>
          <field id="103" name="Drive_state_nxt_DriveAndCount_SM3" type="117" pointer="false"/>
          <field id="104" name="init" type="169" pointer="false"/>
        </struct>
        <struct id="105" name="inC_StateMachine">
          <field id="106" name="AverageSonar" type="159" pointer="false"/>
          <field id="107" name="Start" type="169" pointer="false"/>
          <field id="108" name="ColorSensor" type="159" pointer="false"/>
        </struct>
      </file>
      <file id="109" name="kcg_types.h">
        <enum id="110" name="SSM_ST_CountSM_DriveAndCount_SM3" tagName="kcg_tag_SSM_ST_CountSM_DriveAndCount_SM3">
          <value id="111" name="SSM_st_Wait_CountSM_DriveAndCount_SM3"/>
          <value id="112" name="SSM_st_Count_CountSM_DriveAndCount_SM3"/>
        </enum>
        <enum id="113" name="SSM_TR_CountSM_DriveAndCount_SM3" tagName="kcg_tag_SSM_TR_CountSM_DriveAndCount_SM3">
          <value id="114" name="SSM_TR_no_trans_CountSM_DriveAndCount_SM3"/>
          <value id="115" name="SSM_TR_Wait_Count_1_Wait_CountSM_DriveAndCount_SM3"/>
          <value id="116" name="SSM_TR_Count_Wait_1_Count_CountSM_DriveAndCount_SM3"/>
        </enum>
        <enum id="117" name="SSM_ST_Drive_DriveAndCount_SM3" tagName="kcg_tag_SSM_ST_Drive_DriveAndCount_SM3">
          <value id="118" name="SSM_st_Drive_Drive_DriveAndCount_SM3"/>
          <value id="119" name="SSM_st_Init_Drive_DriveAndCount_SM3"/>
        </enum>
        <enum id="120" name="SSM_TR_Drive_DriveAndCount_SM3" tagName="kcg_tag_SSM_TR_Drive_DriveAndCount_SM3">
          <value id="121" name="SSM_TR_no_trans_Drive_DriveAndCount_SM3"/>
          <value id="122" name="SSM_TR_Drive_Init_1_Drive_Drive_DriveAndCount_SM3"/>
          <value id="123" name="SSM_TR_Init_Drive_1_Init_Drive_DriveAndCount_SM3"/>
        </enum>
        <enum id="124" name="SSM_ST_SM3" tagName="kcg_tag_SSM_ST_SM3">
          <value id="125" name="SSM_st_DriveAndCount_SM3"/>
          <value id="126" name="SSM_st_Stop_SM3"/>
        </enum>
        <enum id="127" name="SSM_TR_SM3" tagName="kcg_tag_SSM_TR_SM3">
          <value id="128" name="SSM_TR_no_trans_SM3"/>
          <value id="129" name="SSM_TR_DriveAndCount_Stop_1_DriveAndCount_SM3"/>
          <value id="130" name="SSM_TR_Stop_DriveAndCount_1_Stop_SM3"/>
        </enum>
        <enum id="131" name="TruthTableValues_truthtables" tagName="kcg_tag_TruthTableValues_truthtables">
          <value id="132" name="T_truthtables"/>
          <value id="133" name="F_truthtables"/>
          <value id="134" name="X_truthtables"/>
        </enum>
        <macro id="135" name="kcg_assign_array"/>
        <macro id="136" name="kcg_assign_struct"/>
        <macro id="137" name="kcg_lnot_uint8"/>
        <macro id="138" name="kcg_lnot_uint16"/>
        <macro id="139" name="kcg_lnot_uint32"/>
        <macro id="140" name="kcg_lnot_uint64"/>
        <macro id="141" name="kcg_lsl_uint8"/>
        <macro id="142" name="kcg_lsl_uint16"/>
        <macro id="143" name="kcg_lsl_uint32"/>
        <macro id="144" name="kcg_lsl_uint64"/>
        <macro id="145" name="kcg_true"/>
        <macro id="146" name="kcg_false"/>
        <macro id="147" name="kcg_lit_int8"/>
        <macro id="148" name="kcg_lit_int16"/>
        <macro id="149" name="kcg_lit_int32"/>
        <macro id="150" name="kcg_lit_int64"/>
        <macro id="151" name="kcg_lit_uint8"/>
        <macro id="152" name="kcg_lit_uint16"/>
        <macro id="153" name="kcg_lit_uint32"/>
        <macro id="154" name="kcg_lit_uint64"/>
        <macro id="155" name="kcg_lit_size"/>
        <macro id="156" name="kcg_lit_float64"/>
        <macro id="157" name="kcg_lit_float32"/>
        <predefType id="158" name="kcg_int8"/>
        <predefType id="159" name="kcg_int16"/>
        <predefType id="160" name="kcg_int32"/>
        <predefType id="161" name="kcg_int64"/>
        <predefType id="162" name="kcg_uint8"/>
        <predefType id="163" name="kcg_uint16"/>
        <predefType id="164" name="kcg_uint32"/>
        <predefType id="165" name="kcg_uint64"/>
        <predefType id="166" name="kcg_size"/>
        <predefType id="167" name="kcg_float64"/>
        <predefType id="168" name="kcg_float32"/>
        <predefType id="169" name="kcg_bool"/>
        <predefType id="170" name="kcg_char"/>
        <macro id="171" name="KCG_MAPW_CPY"/>
      </file>
      <file id="172" name="kcg_consts.h"/>
      <file id="173" name="kcg_sensors.h"/>
    </c>
    <map srcId="167" dstId="156" role="wrapped-lit"/>
    <map srcId="168" dstId="157" role="wrapped-lit"/>
    <map srcId="166" dstId="155" role="wrapped-lit"/>
    <map srcId="165" dstId="154" role="wrapped-lit"/>
    <map srcId="165" dstId="140" role="wrapped-lnot"/>
    <map srcId="165" dstId="144" role="wrapped-lsl"/>
    <map srcId="164" dstId="153" role="wrapped-lit"/>
    <map srcId="164" dstId="139" role="wrapped-lnot"/>
    <map srcId="164" dstId="143" role="wrapped-lsl"/>
    <map srcId="163" dstId="152" role="wrapped-lit"/>
    <map srcId="163" dstId="138" role="wrapped-lnot"/>
    <map srcId="163" dstId="142" role="wrapped-lsl"/>
    <map srcId="162" dstId="151" role="wrapped-lit"/>
    <map srcId="162" dstId="137" role="wrapped-lnot"/>
    <map srcId="162" dstId="141" role="wrapped-lsl"/>
    <map srcId="161" dstId="150" role="wrapped-lit"/>
    <map srcId="160" dstId="149" role="wrapped-lit"/>
    <map srcId="159" dstId="148" role="wrapped-lit"/>
    <map srcId="158" dstId="147" role="wrapped-lit"/>
  </generated>
  <map modelId="70" generatedId="134"/>
  <map modelId="69" generatedId="133"/>
  <map modelId="68" generatedId="132"/>
  <map modelId="55" generatedId="129"/>
  <map modelId="53" generatedId="123"/>
  <map modelId="50" generatedId="122"/>
  <map modelId="47" generatedId="121" role="autom-no-trans-enum"/>
  <map modelId="45" generatedId="116"/>
  <map modelId="42" generatedId="115"/>
  <map modelId="39" generatedId="114" role="autom-no-trans-enum"/>
  <map modelId="43" generatedId="112"/>
  <map modelId="48" generatedId="118"/>
  <map modelId="40" generatedId="111"/>
  <map modelId="51" generatedId="119"/>
  <map modelId="37" generatedId="128" role="autom-no-trans-enum"/>
  <map modelId="56" generatedId="126"/>
  <map modelId="58" generatedId="130"/>
  <map modelId="38" generatedId="125"/>
  <map modelId="14" generatedId="88" role="context-parameter"/>
  <map modelId="14" generatedId="87" role="init-method"/>
  <map modelId="14" generatedId="90" role="context-parameter"/>
  <map modelId="14" generatedId="89" role="reset-method"/>
  <map modelId="14" generatedId="92" role="input-struct-parameter"/>
  <map modelId="17" generatedId="108"/>
  <map modelId="60" generatedId="108"/>
  <map modelId="16" generatedId="107"/>
  <map modelId="23" generatedId="107"/>
  <map modelId="15" generatedId="106"/>
  <map modelId="26" generatedId="106"/>
  <map modelId="32" generatedId="106"/>
  <map modelId="14" generatedId="105" role="input-struct-type"/>
  <map modelId="14" generatedId="93" role="context-parameter"/>
  <map modelId="47" generatedId="104" role="init"/>
  <map modelId="39" generatedId="104" role="init"/>
  <map modelId="47" generatedId="103" role="autom-next-state"/>
  <map modelId="39" generatedId="102" role="autom-next-state"/>
  <map modelId="37" generatedId="101" role="autom-next-state"/>
  <map modelId="37" generatedId="100" role="memory"/>
  <map modelId="39" generatedId="100" role="memory"/>
  <map modelId="43" generatedId="100" role="memory"/>
  <map modelId="46" generatedId="100" role="memory"/>
  <map modelId="37" generatedId="99" role="memory"/>
  <map modelId="48" generatedId="99" role="memory"/>
  <map modelId="51" generatedId="99" role="memory"/>
  <map modelId="20" generatedId="97"/>
  <map modelId="47" generatedId="97" role="memory"/>
  <map modelId="19" generatedId="96"/>
  <map modelId="37" generatedId="96" role="memory"/>
  <map modelId="18" generatedId="95"/>
  <map modelId="37" generatedId="95" role="memory"/>
  <map modelId="39" generatedId="95" role="memory"/>
  <map modelId="14" generatedId="94" role="context-type"/>
  <map modelId="14" generatedId="86" role="interface-file"/>
  <map modelId="14" generatedId="91" role="cycle-method"/>
  <map modelId="67" generatedId="131"/>
  <map modelId="37" generatedId="127" role="autom-transitions-type"/>
  <map modelId="37" generatedId="124" role="autom-states-type"/>
  <map modelId="47" generatedId="120" role="autom-transitions-type"/>
  <map modelId="47" generatedId="117" role="autom-states-type"/>
  <map modelId="39" generatedId="113" role="autom-transitions-type"/>
  <map modelId="39" generatedId="110" role="autom-states-type"/>
  <map modelId="2" generatedId="170"/>
  <map modelId="1" generatedId="169"/>
  <map modelId="12" generatedId="167"/>
  <map modelId="11" generatedId="168"/>
  <map modelId="13" generatedId="166"/>
  <map modelId="10" generatedId="165"/>
  <map modelId="9" generatedId="164"/>
  <map modelId="8" generatedId="163"/>
  <map modelId="7" generatedId="162"/>
  <map modelId="6" generatedId="161"/>
  <map modelId="5" generatedId="160"/>
  <map modelId="4" generatedId="159"/>
  <map modelId="3" generatedId="158"/>
</mapping>
<!--$********** SCADE Suite KCG 32-bit 6.6 (build i15) ***********
** mapping.xml
** Generation date: 2017-09-21T12:18:29
*************************************************************$-->